/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BerfChatStorage,
  BerfChatStorageInterface,
} from "../BerfChatStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "chatId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "messageHash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    inputs: [],
    name: "chatId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr01",
        type: "address",
      },
      {
        internalType: "address",
        name: "_addr02",
        type: "address",
      },
    ],
    name: "hashAddresses",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_messageHash",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105a1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638ea76c3914610046578063de6f24bb14610064578063f2b24da314610080575b600080fd5b61004e6100b0565b60405161005b919061039d565b60405180910390f35b61007e60048036038101906100799190610246565b6100b6565b005b61009a6004803603810190610095919061020a565b610155565b6040516100a7919061039d565b60405180910390f35b60005481565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1611156100ff576100f43383610155565b600081905550610110565b6101098233610155565b6000819055505b7f5ab80ff36157a3c0540febf125068af09a02fa47b424cf273e52ae1e0ffceb9c33836000548443604051610149959493929190610343565b60405180910390a15050565b600080838360405160200161016b929190610317565b6040516020818303038152906040528051906020012090508091505092915050565b60006101a061019b846103dd565b6103b8565b9050828152602081018484840111156101b857600080fd5b6101c3848285610470565b509392505050565b6000813590506101da81610554565b92915050565b600082601f8301126101f157600080fd5b813561020184826020860161018d565b91505092915050565b6000806040838503121561021d57600080fd5b600061022b858286016101cb565b925050602061023c858286016101cb565b9150509250929050565b6000806040838503121561025957600080fd5b6000610267858286016101cb565b925050602083013567ffffffffffffffff81111561028457600080fd5b610290858286016101e0565b9150509250929050565b6102a38161042a565b82525050565b6102ba6102b58261042a565b6104e3565b82525050565b6102c98161043c565b82525050565b60006102da8261040e565b6102e48185610419565b93506102f481856020860161047f565b6102fd81610536565b840191505092915050565b61031181610466565b82525050565b600061032382856102a9565b60148201915061033382846102a9565b6014820191508190509392505050565b600060a082019050610358600083018861029a565b610365602083018761029a565b61037260408301866102c0565b818103606083015261038481856102cf565b90506103936080830184610308565b9695505050505050565b60006020820190506103b260008301846102c0565b92915050565b60006103c26103d3565b90506103ce82826104b2565b919050565b6000604051905090565b600067ffffffffffffffff8211156103f8576103f7610507565b5b61040182610536565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061043582610446565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561049d578082015181840152602081019050610482565b838111156104ac576000848401525b50505050565b6104bb82610536565b810181811067ffffffffffffffff821117156104da576104d9610507565b5b80604052505050565b60006104ee826104f5565b9050919050565b600061050082610547565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b61055d8161042a565b811461056857600080fd5b5056fea26469706673582212209f30b6084e35945eb66083b654dedbcb32832275335216eb3bd85bde1631564e64736f6c63430008040033";

export class BerfChatStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BerfChatStorage> {
    return super.deploy(overrides || {}) as Promise<BerfChatStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BerfChatStorage {
    return super.attach(address) as BerfChatStorage;
  }
  connect(signer: Signer): BerfChatStorage__factory {
    return super.connect(signer) as BerfChatStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BerfChatStorageInterface {
    return new utils.Interface(_abi) as BerfChatStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BerfChatStorage {
    return new Contract(address, _abi, signerOrProvider) as BerfChatStorage;
  }
}
